use colored::*;
use rand::{thread_rng, Rng};
use std::cmp::Ordering;
use std::io;
fn main() {
    let secret_number = thread_rng().gen_range(0..101);
    println!("Number generated by computer is {}", secret_number);
    loop {
        println!("Please guess a number from 0 - 101");
        let mut guess = String::new();
        io::stdin()
            .read_line(&mut guess)
            .expect("failed to read line");

        let guess: u32 = match guess.trim().parse() {
            Ok(num) => num,
            Err(_) => {
                println!("Please make a valid guess");
                continue;
            }
        };
        println!("You guessed : {}", guess);

        match guess.cmp(&secret_number) {
            Ordering::Equal => {
                print!("{}", "You Win!!\n".green());
                break;
            }
            Ordering::Greater => print!("{}", "Too Big!!\n".red()),
            Ordering::Less => print!("{}", "Too Low!!\n".red()),
        }
    }
}
